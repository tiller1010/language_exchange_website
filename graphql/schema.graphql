scalar Upload

type Video {
	_id: ID!
	title: String!
	src: String!
	originalName: String!
	thumbnailSrc: String!
	originalThumbnailName: String!
	created: String!
	likes: Int!
	uploadedBy: User!
}

type User {
	_id: ID
	displayName: String
	firstName: String!
	lastName: String!
	passwordHash: String!
	completedTopics: String!
	uploadedVideos: String!
	verified: Boolean
	isAdmin: Boolean!
	likedVideos: [Video!]!
	premiumVideoChatListing: PremiumVideoChatListing
}

type Products {
	_id: ID
	userID: ID
	products: [Product]
}

# union PossibleProduct = PremiumVideoChatListing | OtherProduct
union PossibleProduct = PremiumVideoChatListing

type Product {
	userID: ID
	cost: Float
	currency: String
	orderedOn: String
	productObject: PossibleProduct
	productObjectCollection: String
	priceID: String
	status: String
}

type PremiumVideoChatListing {
	_id: ID
	userID: ID
	topic: String
	language: String
	thumbnailSrc: String
	price: Float
	currency: String
}

input PremiumVideoChatListingInputs {
	topic: String
	language: String
	price: Float
	currency: String
}

type PremiumVideoChatListingFeed {
	listings: [PremiumVideoChatListing]
}

type Query {
	indexVideos: [Video]
	getRecentPremiumVideoChatListings: PremiumVideoChatListingFeed
	searchPremiumVideoChatListings(topic: String, language: String): PremiumVideoChatListingFeed
}

type Mutation {
	addLike(userID: ID!, videoID: ID!): Video
	removeLike(userID: ID!, videoID: ID!): Video
	verifyUser(userID: ID!, verificationStatus: Boolean!): User
	addPremiumVideoChatListing(userID: ID!, premiumVideoChatListing: PremiumVideoChatListingInputs, thumbnailFile: Upload): PremiumVideoChatListing
	addPremiumVideoChatListingThumbnailTest(thumbnailFile: Upload): PremiumVideoChatListing
	updatePremiumVideoChatListing(listingID: ID!, premiumVideoChatListing: PremiumVideoChatListingInputs, thumbnailFile: Upload): PremiumVideoChatListing
	removePremiumVideoChatListing(userID: ID!): Boolean
	createProduct(productObjectCollection: String!, productDescription: String!, productObjectID: ID!, userID: ID!): Product
}